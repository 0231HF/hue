<IfModule !version_module>
LoadModule version_module /usr/lib64/httpd/modules/mod_version.so
</IfModule>

<IfModule !authz_host_module>
LoadModule authz_host_module /usr/lib64/httpd/modules/mod_authz_host.so
</IfModule>

<IfModule !proxy_module>
LoadModule proxy_module /usr/lib64/httpd/modules/mod_proxy.so
</IfModule>

<IfModule !proxy_balancer_module>
LoadModule proxy_balancer_module /usr/lib64/httpd/modules/mod_proxy_balancer.so
</IfModule>

<IfModule !proxy_http_module>
LoadModule proxy_http_module /usr/lib64/httpd/modules/mod_proxy_http.so
</IfModule>

<IfModule !authn_file_module>
LoadModule authn_file_module /usr/lib64/httpd/modules/mod_authn_file.so
</IfModule>

<IfModule !authz_groupfile_module>
LoadModule authz_groupfile_module /usr/lib64/httpd/modules/mod_authz_groupfile.so
</IfModule>

<IfModule !authz_user_module>
LoadModule authz_user_module /usr/lib64/httpd/modules/mod_authz_user.so
</IfModule>

<IfModule !auth_basic_module>
LoadModule auth_basic_module /usr/lib64/httpd/modules/mod_auth_basic.so
</IfModule>

<IfModule !reqtimeout_module>
LoadModule reqtimeout_module /usr/lib64/httpd/modules/mod_reqtimeout.so
</IfModule>

<IfModule !filter_module>
LoadModule filter_module /usr/lib64/httpd/modules/mod_filter.so
</IfModule>

<IfModule !mime_module>
LoadModule mime_module /usr/lib64/httpd/modules/mod_mime.so
</IfModule>

<IfModule !log_config_module>
LoadModule log_config_module /usr/lib64/httpd/modules/mod_log_config.so
</IfModule>

<IfModule !env_module>
LoadModule env_module /usr/lib64/httpd/modules/mod_env.so
</IfModule>

<IfModule !headers_module>
LoadModule headers_module /usr/lib64/httpd/modules/mod_headers.so
</IfModule>

<IfModule !setenvif_module>
LoadModule setenvif_module /usr/lib64/httpd/modules/mod_setenvif.so
</IfModule>

<IfModule !status_module>
LoadModule status_module /usr/lib64/httpd/modules/mod_status.so
</IfModule>

<IfModule !autoindex_module>
LoadModule autoindex_module /usr/lib64/httpd/modules/mod_autoindex.so
</IfModule>

<IfModule !dir_module>
LoadModule dir_module /usr/lib64/httpd/modules/mod_dir.so
</IfModule>

<IfModule !alias_module>
LoadModule alias_module /usr/lib64/httpd/modules/mod_alias.so
</IfModule>

<IfModule !ssl_module>
LoadModule ssl_module /usr/lib64/httpd/modules/mod_ssl.so
</IfModule>

<IfVersion >= 2.4>
  <IfModule !mpm_event_module>
    <IfModule !mpm_prefork_module>
      <IfModule !mpm_worker_module>
        LoadModule mpm_event_module /usr/lib64/httpd/modules/mod_mpm_event.so
      </IfModule>
    </IfModule>
  </IfModule>

  <IfModule !authz_core_module>
  LoadModule authz_core_module /usr/lib64/httpd/modules/mod_authz_core.so
  </IfModule>

  <IfModule !access_compat_module>
  LoadModule access_compat_module /usr/lib64/httpd/modules/mod_access_compat.so
  </IfModule>

  <IfModule !slotmem_shm_module>
  LoadModule slotmem_shm_module /usr/lib64/httpd/modules/mod_slotmem_shm.so
  </IfModule>

  <IfModule !unixd_module>
  LoadModule unixd_module /usr/lib64/httpd/modules/mod_unixd.so
  </IfModule>

  <IfModule !lbmethod_byrequests_module>
  LoadModule lbmethod_byrequests_module /usr/lib64/httpd/modules/mod_lbmethod_byrequests.so
  </IfModule>
</IfVersion>

ServerRoot /etc/hue/nightly16x/conf

<IFVersion >= 2.4>
DefaultRuntimeDir /etc/hue/nightly16x/conf
</IfVersion>

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
#
<Directory />
Options FollowSymlinks
AllowOverride none
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<IfVersion <= 2.2>
<Files ".ht*">
Require all denied
</Files>
</IfVersion>

<IfVersion >= 2.4>
<FilesMatch "^\.ht">
Require all denied
</FilesMatch>
</IfVersion>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "/var/log/hue-httpd/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
#
# The following directives define some format nicknames for use with
# a CustomLog directive (see below).
#
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
LogFormat "%h %l %u %t \"%r\" %>s %b" common

<IfModule logio_module>
# You need to enable mod_logio.c to use %I and %O
LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
</IfModule>

#
# The location and format of the access logfile (Common Logfile Format).
# If you do not define any access logfiles within a <VirtualHost>
# container, they will be logged here.  Contrariwise, if you *do*
# define per-<VirtualHost> access logfiles, transactions will be
# logged therein and *not* in this file.
#
CustomLog "/var/log/hue-httpd/access_log" common

#
# If you prefer a logfile with access, agent, and referer information
# (Combined Logfile Format) you can use the following directive.
#
#CustomLog "/usr/local/var/log/apache2/access_log" combined
</IfModule>

<IfModule mime_module>
#
# TypesConfig points to the file containing the list of mappings from
# filename extension to MIME-type.
#
TypesConfig /etc/hue/nightly16x/conf/mime.types

#
# AddType allows you to add to or override the MIME configuration
# file specified in TypesConfig for specific file types.
#
#AddType application/x-gzip .tgz
#
# AddEncoding allows you to have certain browsers uncompress
# information on the fly. Note: Not all browsers support this.
#
#AddEncoding x-compress .Z
#AddEncoding x-gzip .gz .tgz
#
# If the AddEncoding directives above are commented-out, then you
# probably should define those extensions to indicate media types:
#
AddType application/x-compress .Z
AddType application/x-gzip .gz .tgz

</IfModule>

#
# Note: The following must must be present to support
#       starting without SSL on platforms with no /dev/random equivalent
#       but a statically compiled-in mod_ssl.
#
<IfModule ssl_module>
SSLRandomSeed startup builtin
SSLRandomSeed connect builtin
</IfModule>

PidFile /etc/hue/nightly16x/conf/httpd.pid

Alias /static /usr/lib/hue/build/static

<Directory /usr/lib/hue/build/static>
Options -Indexes
Allow from all
</Directory>

Header add Set-Cookie "ROUTEID=.%{BALANCER_WORKER_ROUTE}e; path=/" env=BALANCER_ROUTE_CHANGED

ProxyPreserveHost Off
ProxyPass /static !
ProxyPass / balancer://hue/ stickysession=ROUTEID

SetEnv proxy-initial-not-pooled 1
ProxyTimeout 900
#
# Load config files from the config directory "/etc/httpd/conf.d".
#
Include /etc/hue/nightly16x/conf/hue.conf

<IfDefine CLOUDERA_HTTPD_USE_SSL>
SSLEngine on
SSLProxyEngine on

# From Mozilla Recommended Configuration:
# https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28default.29
SSLProtocol             all -SSLv2 -SSLv3
SSLProxyProtocol        all -SSLv2 -SSLv3
SSLCipherSuite          ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
SSLHonorCipherOrder     on
</IfDefine>
