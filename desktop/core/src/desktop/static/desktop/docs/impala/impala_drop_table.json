{"body":"<div><p>\n      Removes an Impala table. Also removes the underlying HDFS data files for internal tables, although not for\n      external tables.\n    </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_syntax_blurb\"><b>Syntax:</b> </p> <div class=\"sql-docs-code-block\">DROP TABLE [IF EXISTS] [<span class=\"sql-docs-variable\">db_name</span> .]<span class=\"sql-docs-variable\">table_name</span> <span class=\"sql-docs-inline-code\">[PURGE]</span> </div><p><b>IF EXISTS clause:</b> </p> <p>\n      The optional <span class=\"sql-docs-inline-code\">IF EXISTS</span>  clause makes the statement succeed whether or not the table exists.\n      If the table does exist, it is dropped; if it does not exist, the statement has no effect. This capability is\n      useful in standardized setup scripts that remove existing schema objects and create new ones. By using some\n      combination of <span class=\"sql-docs-inline-code\">IF EXISTS</span>  for the <span class=\"sql-docs-inline-code\">DROP</span>  statements and <span class=\"sql-docs-inline-code\">IF NOT\n      EXISTS</span>  clauses for the <span class=\"sql-docs-inline-code\">CREATE</span>  statements, the script can run successfully the first\n      time you run it (when the objects do not exist yet) and subsequent times (when some or all of the objects do\n      already exist).\n    </p> <p><b>PURGE clause:</b> </p> <p> The optional <span class=\"sql-docs-inline-code\">PURGE</span>  keyword, available in\n      Impala 2.3 and higher, causes Impala to remove the associated\n      HDFS data files immediately, rather than going through the HDFS trashcan\n      mechanism. Use this keyword when dropping a table if it is crucial to\n      remove the data as quickly as possible to free up space, or if there is a\n      problem with the trashcan, such as the trash cannot being configured or\n      being in a different HDFS encryption zone than the data files. </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_ddl_blurb\"><b>Statement type:</b>  DDL\n      </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_usage_notes_blurb\"><b>Usage notes:</b> </p> <p>\n      By default, Impala removes the associated HDFS directory and data files for the table. If you issue a\n      <span class=\"sql-docs-inline-code\">DROP TABLE</span>  and the data files are not deleted, it might be for the following reasons:\n    </p> <ul><li>\n        If the table was created with the\n        <span class=\"sql-docs-inline-code\"><a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_tables.xml#external_tables\">EXTERNAL</a></span>  clause, Impala leaves all\n        files and directories untouched. Use external tables when the data is under the control of other Hadoop\n        components, and Impala is only used to query the data files from their original locations.\n      </li> <li>\n        Impala might leave the data files behind unintentionally, if there is no HDFS location available to hold\n        the HDFS trashcan for the <span class=\"sql-docs-inline-code\">impala</span>  user. See\n        <span>prereqs account</span> for the procedure to set up the required HDFS home\n        directory.\n      </li> </ul> <p>\n      Make sure that you are in the correct database before dropping a table, either by issuing a\n      <span class=\"sql-docs-inline-code\">USE</span>  statement first or by using a fully qualified name\n      <span class=\"sql-docs-inline-code\"><span class=\"sql-docs-variable\">db_name</span> .<span class=\"sql-docs-variable\">table_name</span> </span> .\n    </p> <p>\n      If you intend to issue a <span class=\"sql-docs-inline-code\">DROP DATABASE</span>  statement, first issue <span class=\"sql-docs-inline-code\">DROP TABLE</span> \n      statements to remove all the tables in that database.\n    </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_example_blurb\"><b>Examples:</b> </p> <div class=\"sql-docs-code-block\">create database temporary;<br/>use temporary;<br/>create table unimportant (x int);<br/>create table trivial (s string);<br/>-- Drop a table in the current database.<br/>drop table unimportant;<br/>-- Switch to a different database.<br/>use default;<br/>-- To drop a table in a different database...<br/>drop table trivial;<br/><i>ERROR: AnalysisException: Table does not exist: default.trivial</i> -- ...use a fully qualified name.<br/>drop table temporary.trivial;</div><p id=\"../Impala/docs/topics/impala_drop_table.xml_disk_space_blurb\">\n        For other tips about managing and reclaiming Impala disk space, see\n        <span>disk space</span>.\n      </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_s3_blurb\"><b>Amazon S3 considerations:</b> </p> <p>\n      The <span class=\"sql-docs-inline-code\">DROP TABLE</span>  statement can remove data files from S3\n      if the associated S3 table is an internal table.\n      In Impala 2.6 and higher, as part of improved support for writing\n      to S3, Impala also removes the associated folder when dropping an internal table\n      that resides on S3.\n      See <span>s3</span> for details about working with S3 tables.\n    </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_s3_drop_table_purge\">\n        For best compatibility with the S3 write support in Impala 2.6\n        and higher:\n        <ul><li>Use native Hadoop techniques to create data files in S3 for querying through Impala.</li> <li>Use the <span class=\"sql-docs-inline-code\">PURGE</span>  clause of <span class=\"sql-docs-inline-code\">DROP TABLE</span>  when dropping internal (managed) tables.</li> </ul> \n        By default, when you drop an internal (managed) table, the data files are\n        moved to the HDFS trashcan. This operation is expensive for tables that\n        reside on the Amazon S3 filesystem. Therefore, for S3 tables, prefer to use\n        <span class=\"sql-docs-inline-code\">DROP TABLE <span class=\"sql-docs-variable\">table_name</span>  PURGE</span>  rather than the default <span class=\"sql-docs-inline-code\">DROP TABLE</span>  statement.\n        The <span class=\"sql-docs-inline-code\">PURGE</span>  clause makes Impala delete the data files immediately,\n        skipping the HDFS trashcan.\n        For the <span class=\"sql-docs-inline-code\">PURGE</span>  clause to work effectively, you must originally create the\n        data files on S3 using one of the tools from the Hadoop ecosystem, such as\n        <span class=\"sql-docs-inline-code\">hadoop fs -cp</span> , or <span class=\"sql-docs-inline-code\">INSERT</span>  in Impala or Hive.\n      </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_s3_ddl\">\n        In Impala 2.6 and higher, Impala DDL statements such as\n        <span class=\"sql-docs-inline-code\">CREATE DATABASE</span> , <span class=\"sql-docs-inline-code\">CREATE TABLE</span> , <span class=\"sql-docs-inline-code\">DROP DATABASE CASCADE</span> ,\n        <span class=\"sql-docs-inline-code\">DROP TABLE</span> , and <span class=\"sql-docs-inline-code\">ALTER TABLE [ADD|DROP] PARTITION</span>  can create or remove folders\n        as needed in the Amazon S3 system. Prior to Impala 2.6, you had to create folders yourself and point\n        Impala database, tables, or partitions at them, and manually remove folders when no longer needed.\n        See <span>s3</span> for details about reading and writing S3 data with Impala.\n      </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_cancel_blurb_no\"><b>Cancellation:</b>  Cannot be cancelled.\n      </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_permissions_blurb\"><b>HDFS permissions:</b> </p> <p>\n      For an internal table, the user ID that the <span class=\"sql-docs-inline-code\">impalad</span>  daemon runs under,\n      typically the <span class=\"sql-docs-inline-code\">impala</span>  user, must have write\n      permission for all the files and directories that make up the table.\n    </p> <p>\n      For an external table, dropping the table only involves changes to metadata in the metastore database.\n      Because Impala does not remove any HDFS files or directories when external tables are dropped,\n      no particular permissions are needed for the associated HDFS files or directories.\n    </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_kudu_blurb\"><b>Kudu considerations:</b> </p> <p>\n      Kudu tables can be managed or external, the same as with HDFS-based\n      tables. For a managed table, the underlying Kudu table and its data\n      are removed by <span class=\"sql-docs-inline-code\">DROP TABLE</span> . For an external table,\n      the underlying Kudu table and its data remain after a\n      <span class=\"sql-docs-inline-code\">DROP TABLE</span> .\n    </p> <p id=\"../Impala/docs/topics/impala_drop_table.xml_related_info\"><b>Related information:</b> </p> <p><a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_tables.xml#tables\">Overview of Impala Tables</a>,\n      <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_alter_table.xml#alter_table\">ALTER TABLE Statement</a>, <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_create_table.xml#create_table\">CREATE TABLE Statement</a>,\n      <span>partitioning</span>, <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_tables.xml#internal_tables\"><h4>Internal Tables</h4> </a>,\n      <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_tables.xml#external_tables\"><h4>External Tables</h4> </a></p> </div> ","title":"DROP TABLE Statement"}