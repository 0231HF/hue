{"body":"<div><p>\n      Deletes an arbitrary number of rows from a Kudu table.\n      This statement only works for Impala tables that use the Kudu storage engine.\n    </p><p id=\"../Impala/docs/topics/impala_delete.xml_syntax_blurb\"><b>Syntax:</b></p><div class=\"sql-docs-code-block\"><br/>DELETE [FROM] [<span class=\"sql-docs-variable\">database_name</span>.]<span class=\"sql-docs-variable\">table_name</span> [ WHERE <span class=\"sql-docs-variable\">where_conditions</span> ]<br/><br/>DELETE <span class=\"sql-docs-variable\">table_ref</span> FROM [<span class=\"sql-docs-variable\">joined_table_refs</span>] [ WHERE <span class=\"sql-docs-variable\">where_conditions</span> ]<br/></div><p>\n      The first form evaluates rows from one table against an optional\n      <span class=\"sql-docs-inline-code\">WHERE</span> clause, and deletes all the rows that\n      match the <span class=\"sql-docs-inline-code\">WHERE</span> conditions, or all rows if\n      <span class=\"sql-docs-inline-code\">WHERE</span> is omitted.\n    </p><p>\n      The second form evaluates one or more join clauses, and deletes\n      all matching rows from one of the tables. The join clauses can\n      include non-Kudu tables, but the table from which the rows\n      are deleted must be a Kudu table. The <span class=\"sql-docs-inline-code\">FROM</span>\n      keyword is required in this case, to separate the name of\n      the table whose rows are being deleted from the table names\n      of the join clauses.\n    </p><p id=\"../Impala/docs/topics/impala_delete.xml_usage_notes_blurb\"><b>Usage notes:</b></p><p>\n      The conditions in the <span class=\"sql-docs-inline-code\">WHERE</span> clause are the same ones allowed\n      for the <span class=\"sql-docs-inline-code\">SELECT</span> statement. See <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_select.xml#select\">SELECT Statement</a>\n      for details.\n    </p><p>\n      The conditions in the <span class=\"sql-docs-inline-code\">WHERE</span> clause can refer to\n      any combination of primary key columns or other columns. Referring to\n      primary key columns in the <span class=\"sql-docs-inline-code\">WHERE</span> clause is more efficient\n      than referring to non-primary key columns.\n    </p><p>\n      If the <span class=\"sql-docs-inline-code\">WHERE</span> clause is omitted, all rows are removed from the table.\n    </p><p>\n      Because Kudu currently does not enforce strong consistency during concurrent DML operations,\n      be aware that the results after this statement finishes might be different than you\n      intuitively expect:\n    </p><ul><li><p>\n          If some rows cannot be deleted because their\n          some primary key columns are not found, due to their being deleted\n          by a concurrent <span class=\"sql-docs-inline-code\">DELETE</span> operation,\n          the statement succeeds but returns a warning.\n        </p></li><li><p>\n          A <span class=\"sql-docs-inline-code\">DELETE</span> statement might also overlap with\n          <span class=\"sql-docs-inline-code\">INSERT</span>, <span class=\"sql-docs-inline-code\">UPDATE</span>,\n          or <span class=\"sql-docs-inline-code\">UPSERT</span> statements running concurrently on the same table.\n          After the statement finishes, there might be more or fewer rows than expected in the table\n          because it is undefined whether the <span class=\"sql-docs-inline-code\">DELETE</span> applies to rows that are\n          inserted or updated while the <span class=\"sql-docs-inline-code\">DELETE</span> is in progress.\n        </p></li></ul><p>\n      The number of affected rows is reported in an <span class=\"sql-docs-inline-code\">impala-shell</span> message\n      and in the query profile.\n    </p><p id=\"../Impala/docs/topics/impala_delete.xml_dml_blurb_kudu\"><b>Statement type:</b> DML\n      </p><div id=\"../Impala/docs/topics/impala_delete.xml_compute_stats_next\" class=\"sql-docs-note\">\n        After adding or replacing data in a table used in performance-critical queries, issue a <span class=\"sql-docs-inline-code\">COMPUTE\n        STATS</span> statement to make sure all statistics are up-to-date. Consider updating statistics for a\n        table after any <span class=\"sql-docs-inline-code\">INSERT</span>, <span class=\"sql-docs-inline-code\">LOAD DATA</span>, or <span class=\"sql-docs-inline-code\">CREATE TABLE AS\n        SELECT</span> statement in Impala, or after loading data through Hive and doing a <span class=\"sql-docs-inline-code\">REFRESH\n        <span class=\"sql-docs-variable\">table_name</span></span> in Impala. This technique is especially important for tables that\n        are very large, used in join queries, or both.\n      </div><p id=\"../Impala/docs/topics/impala_delete.xml_example_blurb\"><b>Examples:</b></p><p>\n      The following examples show how to delete rows from a specified\n      table, either all rows or rows that match a <span class=\"sql-docs-inline-code\">WHERE</span>\n      clause:\n    </p><div class=\"sql-docs-code-block\"><br/>-- Deletes all rows. The FROM keyword is optional.<br/>DELETE FROM kudu_table;<br/>DELETE kudu_table;<br/><br/>-- Deletes 0, 1, or more rows.<br/>-- (If c1 is a single-column primary key, the statement could only<br/>-- delete 0 or 1 rows.)<br/>DELETE FROM kudu_table WHERE c1 = 100;<br/><br/>-- Deletes all rows that match all the WHERE conditions.<br/>DELETE FROM kudu_table WHERE<br/>  (c1 > c2 OR c3 IN ('hello','world')) AND c4 IS NOT NULL;<br/>DELETE FROM t1 WHERE<br/>  (c1 IN (1,2,3) AND c2 > c3) OR c4 IS NOT NULL;<br/>DELETE FROM time_series WHERE<br/>  year = 2016 AND month IN (11,12) AND day > 15;<br/><br/>-- WHERE condition with a subquery.<br/>DELETE FROM t1 WHERE<br/>  c5 IN (SELECT DISTINCT other_col FROM other_table);<br/><br/>-- Does not delete any rows, because the WHERE condition is always false.<br/>DELETE FROM kudu_table WHERE 1 = 0;<br/></div><p>\n      The following examples show how to delete rows that are part\n      of the result set from a join:\n    </p><div class=\"sql-docs-code-block\"><br/>-- Remove _all_ rows from t1 that have a matching X value in t2.<br/>DELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x;<br/><br/>-- Remove _some_ rows from t1 that have a matching X value in t2.<br/>DELETE t1 FROM t1 JOIN t2 ON t1.x = t2.x<br/>  WHERE t1.y = FALSE and t2.z > 100;<br/><br/>-- Delete from a Kudu table based on a join with a non-Kudu table.<br/>DELETE t1 FROM kudu_table t1 JOIN non_kudu_table t2 ON t1.x = t2.x;<br/><br/>-- The tables can be joined in any order as long as the Kudu table<br/>-- is specified as the deletion target.<br/>DELETE t2 FROM non_kudu_table t1 JOIN kudu_table t2 ON t1.x = t2.x;<br/></div><p id=\"../Impala/docs/topics/impala_delete.xml_related_info\"><b>Related information:</b></p><p><span>impala kudu</span>, <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_insert.xml#insert\">INSERT Statement</a>,\n      <a href=\"javascript: void(0);\" class=\"lang-ref-link\" data-target=\"topics/impala_update.xml#update\">UPDATE Statement (Impala 2.8 or higher only)</a>, <span>upsert</span></p></div>","title":"DELETE Statement (Impala 2.8 or higher only)"}