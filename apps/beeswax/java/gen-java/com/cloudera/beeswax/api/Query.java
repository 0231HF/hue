/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package com.cloudera.beeswax.api;

import org.apache.commons.lang.builder.HashCodeBuilder;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import java.util.Collections;
import org.apache.log4j.Logger;

import org.apache.thrift.*;
import org.apache.thrift.meta_data.*;
import org.apache.thrift.protocol.*;

public class Query implements TBase, java.io.Serializable, Cloneable {
  private static final TStruct STRUCT_DESC = new TStruct("Query");
  private static final TField QUERY_FIELD_DESC = new TField("query", TType.STRING, (short)1);
  private static final TField CONFIGURATION_FIELD_DESC = new TField("configuration", TType.LIST, (short)3);
  private static final TField HADOOP_USER_FIELD_DESC = new TField("hadoop_user", TType.STRING, (short)4);
  private static final TField HADOOP_GROUPS_FIELD_DESC = new TField("hadoop_groups", TType.LIST, (short)5);

  public String query;
  public static final int QUERY = 1;
  public List<String> configuration;
  public static final int CONFIGURATION = 3;
  public String hadoop_user;
  public static final int HADOOP_USER = 4;
  public List<String> hadoop_groups;
  public static final int HADOOP_GROUPS = 5;

  private final Isset __isset = new Isset();
  private static final class Isset implements java.io.Serializable {
  }

  public static final Map<Integer, FieldMetaData> metaDataMap = Collections.unmodifiableMap(new HashMap<Integer, FieldMetaData>() {{
    put(QUERY, new FieldMetaData("query", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    put(CONFIGURATION, new FieldMetaData("configuration", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
    put(HADOOP_USER, new FieldMetaData("hadoop_user", TFieldRequirementType.DEFAULT, 
        new FieldValueMetaData(TType.STRING)));
    put(HADOOP_GROUPS, new FieldMetaData("hadoop_groups", TFieldRequirementType.DEFAULT, 
        new ListMetaData(TType.LIST, 
            new FieldValueMetaData(TType.STRING))));
  }});

  static {
    FieldMetaData.addStructMetaDataMap(Query.class, metaDataMap);
  }

  public Query() {
  }

  public Query(
    String query,
    List<String> configuration,
    String hadoop_user,
    List<String> hadoop_groups)
  {
    this();
    this.query = query;
    this.configuration = configuration;
    this.hadoop_user = hadoop_user;
    this.hadoop_groups = hadoop_groups;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Query(Query other) {
    if (other.isSetQuery()) {
      this.query = other.query;
    }
    if (other.isSetConfiguration()) {
      List<String> __this__configuration = new ArrayList<String>();
      for (String other_element : other.configuration) {
        __this__configuration.add(other_element);
      }
      this.configuration = __this__configuration;
    }
    if (other.isSetHadoop_user()) {
      this.hadoop_user = other.hadoop_user;
    }
    if (other.isSetHadoop_groups()) {
      List<String> __this__hadoop_groups = new ArrayList<String>();
      for (String other_element : other.hadoop_groups) {
        __this__hadoop_groups.add(other_element);
      }
      this.hadoop_groups = __this__hadoop_groups;
    }
  }

  @Override
  public Query clone() {
    return new Query(this);
  }

  public String getQuery() {
    return this.query;
  }

  public void setQuery(String query) {
    this.query = query;
  }

  public void unsetQuery() {
    this.query = null;
  }

  // Returns true if field query is set (has been asigned a value) and false otherwise
  public boolean isSetQuery() {
    return this.query != null;
  }

  public void setQueryIsSet(boolean value) {
    if (!value) {
      this.query = null;
    }
  }

  public int getConfigurationSize() {
    return (this.configuration == null) ? 0 : this.configuration.size();
  }

  public java.util.Iterator<String> getConfigurationIterator() {
    return (this.configuration == null) ? null : this.configuration.iterator();
  }

  public void addToConfiguration(String elem) {
    if (this.configuration == null) {
      this.configuration = new ArrayList<String>();
    }
    this.configuration.add(elem);
  }

  public List<String> getConfiguration() {
    return this.configuration;
  }

  public void setConfiguration(List<String> configuration) {
    this.configuration = configuration;
  }

  public void unsetConfiguration() {
    this.configuration = null;
  }

  // Returns true if field configuration is set (has been asigned a value) and false otherwise
  public boolean isSetConfiguration() {
    return this.configuration != null;
  }

  public void setConfigurationIsSet(boolean value) {
    if (!value) {
      this.configuration = null;
    }
  }

  public String getHadoop_user() {
    return this.hadoop_user;
  }

  public void setHadoop_user(String hadoop_user) {
    this.hadoop_user = hadoop_user;
  }

  public void unsetHadoop_user() {
    this.hadoop_user = null;
  }

  // Returns true if field hadoop_user is set (has been asigned a value) and false otherwise
  public boolean isSetHadoop_user() {
    return this.hadoop_user != null;
  }

  public void setHadoop_userIsSet(boolean value) {
    if (!value) {
      this.hadoop_user = null;
    }
  }

  public int getHadoop_groupsSize() {
    return (this.hadoop_groups == null) ? 0 : this.hadoop_groups.size();
  }

  public java.util.Iterator<String> getHadoop_groupsIterator() {
    return (this.hadoop_groups == null) ? null : this.hadoop_groups.iterator();
  }

  public void addToHadoop_groups(String elem) {
    if (this.hadoop_groups == null) {
      this.hadoop_groups = new ArrayList<String>();
    }
    this.hadoop_groups.add(elem);
  }

  public List<String> getHadoop_groups() {
    return this.hadoop_groups;
  }

  public void setHadoop_groups(List<String> hadoop_groups) {
    this.hadoop_groups = hadoop_groups;
  }

  public void unsetHadoop_groups() {
    this.hadoop_groups = null;
  }

  // Returns true if field hadoop_groups is set (has been asigned a value) and false otherwise
  public boolean isSetHadoop_groups() {
    return this.hadoop_groups != null;
  }

  public void setHadoop_groupsIsSet(boolean value) {
    if (!value) {
      this.hadoop_groups = null;
    }
  }

  public void setFieldValue(int fieldID, Object value) {
    switch (fieldID) {
    case QUERY:
      if (value == null) {
        unsetQuery();
      } else {
        setQuery((String)value);
      }
      break;

    case CONFIGURATION:
      if (value == null) {
        unsetConfiguration();
      } else {
        setConfiguration((List<String>)value);
      }
      break;

    case HADOOP_USER:
      if (value == null) {
        unsetHadoop_user();
      } else {
        setHadoop_user((String)value);
      }
      break;

    case HADOOP_GROUPS:
      if (value == null) {
        unsetHadoop_groups();
      } else {
        setHadoop_groups((List<String>)value);
      }
      break;

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  public Object getFieldValue(int fieldID) {
    switch (fieldID) {
    case QUERY:
      return getQuery();

    case CONFIGURATION:
      return getConfiguration();

    case HADOOP_USER:
      return getHadoop_user();

    case HADOOP_GROUPS:
      return getHadoop_groups();

    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  // Returns true if field corresponding to fieldID is set (has been asigned a value) and false otherwise
  public boolean isSet(int fieldID) {
    switch (fieldID) {
    case QUERY:
      return isSetQuery();
    case CONFIGURATION:
      return isSetConfiguration();
    case HADOOP_USER:
      return isSetHadoop_user();
    case HADOOP_GROUPS:
      return isSetHadoop_groups();
    default:
      throw new IllegalArgumentException("Field " + fieldID + " doesn't exist!");
    }
  }

  @Override
  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof Query)
      return this.equals((Query)that);
    return false;
  }

  public boolean equals(Query that) {
    if (that == null)
      return false;

    boolean this_present_query = true && this.isSetQuery();
    boolean that_present_query = true && that.isSetQuery();
    if (this_present_query || that_present_query) {
      if (!(this_present_query && that_present_query))
        return false;
      if (!this.query.equals(that.query))
        return false;
    }

    boolean this_present_configuration = true && this.isSetConfiguration();
    boolean that_present_configuration = true && that.isSetConfiguration();
    if (this_present_configuration || that_present_configuration) {
      if (!(this_present_configuration && that_present_configuration))
        return false;
      if (!this.configuration.equals(that.configuration))
        return false;
    }

    boolean this_present_hadoop_user = true && this.isSetHadoop_user();
    boolean that_present_hadoop_user = true && that.isSetHadoop_user();
    if (this_present_hadoop_user || that_present_hadoop_user) {
      if (!(this_present_hadoop_user && that_present_hadoop_user))
        return false;
      if (!this.hadoop_user.equals(that.hadoop_user))
        return false;
    }

    boolean this_present_hadoop_groups = true && this.isSetHadoop_groups();
    boolean that_present_hadoop_groups = true && that.isSetHadoop_groups();
    if (this_present_hadoop_groups || that_present_hadoop_groups) {
      if (!(this_present_hadoop_groups && that_present_hadoop_groups))
        return false;
      if (!this.hadoop_groups.equals(that.hadoop_groups))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    HashCodeBuilder builder = new HashCodeBuilder();

    boolean present_query = true && (isSetQuery());
    builder.append(present_query);
    if (present_query)
      builder.append(query);

    boolean present_configuration = true && (isSetConfiguration());
    builder.append(present_configuration);
    if (present_configuration)
      builder.append(configuration);

    boolean present_hadoop_user = true && (isSetHadoop_user());
    builder.append(present_hadoop_user);
    if (present_hadoop_user)
      builder.append(hadoop_user);

    boolean present_hadoop_groups = true && (isSetHadoop_groups());
    builder.append(present_hadoop_groups);
    if (present_hadoop_groups)
      builder.append(hadoop_groups);

    return builder.toHashCode();
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case QUERY:
          if (field.type == TType.STRING) {
            this.query = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case CONFIGURATION:
          if (field.type == TType.LIST) {
            {
              TList _list0 = iprot.readListBegin();
              this.configuration = new ArrayList<String>(_list0.size);
              for (int _i1 = 0; _i1 < _list0.size; ++_i1)
              {
                String _elem2;
                _elem2 = iprot.readString();
                this.configuration.add(_elem2);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case HADOOP_USER:
          if (field.type == TType.STRING) {
            this.hadoop_user = iprot.readString();
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case HADOOP_GROUPS:
          if (field.type == TType.LIST) {
            {
              TList _list3 = iprot.readListBegin();
              this.hadoop_groups = new ArrayList<String>(_list3.size);
              for (int _i4 = 0; _i4 < _list3.size; ++_i4)
              {
                String _elem5;
                _elem5 = iprot.readString();
                this.hadoop_groups.add(_elem5);
              }
              iprot.readListEnd();
            }
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();


    // check for required fields of primitive type, which can't be checked in the validate method
    validate();
  }

  public void write(TProtocol oprot) throws TException {
    validate();

    oprot.writeStructBegin(STRUCT_DESC);
    if (this.query != null) {
      oprot.writeFieldBegin(QUERY_FIELD_DESC);
      oprot.writeString(this.query);
      oprot.writeFieldEnd();
    }
    if (this.configuration != null) {
      oprot.writeFieldBegin(CONFIGURATION_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.configuration.size()));
        for (String _iter6 : this.configuration)        {
          oprot.writeString(_iter6);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    if (this.hadoop_user != null) {
      oprot.writeFieldBegin(HADOOP_USER_FIELD_DESC);
      oprot.writeString(this.hadoop_user);
      oprot.writeFieldEnd();
    }
    if (this.hadoop_groups != null) {
      oprot.writeFieldBegin(HADOOP_GROUPS_FIELD_DESC);
      {
        oprot.writeListBegin(new TList(TType.STRING, this.hadoop_groups.size()));
        for (String _iter7 : this.hadoop_groups)        {
          oprot.writeString(_iter7);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder("Query(");
    boolean first = true;

    sb.append("query:");
    if (this.query == null) {
      sb.append("null");
    } else {
      sb.append(this.query);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("configuration:");
    if (this.configuration == null) {
      sb.append("null");
    } else {
      sb.append(this.configuration);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hadoop_user:");
    if (this.hadoop_user == null) {
      sb.append("null");
    } else {
      sb.append(this.hadoop_user);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("hadoop_groups:");
    if (this.hadoop_groups == null) {
      sb.append("null");
    } else {
      sb.append(this.hadoop_groups);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws TException {
    // check for required fields
    // check that fields of type enum have valid values
  }

}

